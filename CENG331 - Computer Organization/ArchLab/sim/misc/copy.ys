# ALPER KOCAMAN
# e2169589

# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 

.align 8
# Source block

src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00

# Destination block

dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

main:	

	irmovq src,%rdi
	irmovq dest,%rsi
	irmovq $3,%rdx
	irmovq $-1,%r8
	irmovq $8,%r9
	call copy_block	
	ret

# *src in %rdi, *dest in %rsi, len in %rdx

copy_block:

	xorq %rax,%rax	     # long result = 0 ;

loop:	

	mrmovq (%rdi),%rcx
	rmmovq %rcx,(%rsi)
	addq   %r9,%rdi    # get next element
	addq   %r9,%rsi    # get next element
	xorq   %rcx,%rax
	addq   %r8,%rdx
	andq   %rdx,%rdx	       # if(len == 0)
	jne    loop           # Goto finish

finish:	

	ret                  # Return

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
