# ALPER KOCAMAN
# e2169589

# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 

# Sample linked list
	.align 8
ele1:
	.quad 0x00a
	.quad ele2

ele2:
	.quad 0x0b0
	.quad ele3

ele3:
	.quad 0xc00
	.quad 0

main:	

	irmovq ele1,%rdi
	call sum_list		# sum_list(ele1)
	ret

# long sum_list(list_ptr ls)
# ls in %rdi,val in %rax

sum_list:

	xorq %rax,%rax	     # sum = 0
	andq %rdi,%rdi	     # if(ele1 == 0)
	je     finish        # Goto finish

loop:	

	mrmovq (%rdi),%rcx
	addq %rcx,%rax         # Add to sum
	mrmovq 8(%rdi),%rdi    # get next ele
	andq %rdi,%rdi	       # if(ele == 0)
	jne     loop           # Goto finish

finish:	

	ret                  # Return

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
